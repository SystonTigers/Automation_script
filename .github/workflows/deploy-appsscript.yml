name: Deploy to Google Apps Script

on:
  push:
    branches: [ main, master ]
    paths:
      - 'src/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install clasp
      run: npm install -g @google/clasp

    - name: Verify required secrets
      run: |
        if [[ -z "${{ secrets.ACCESS_TOKEN }}" ]] || [[ -z "${{ secrets.REFRESH_TOKEN }}" ]] || [[ -z "${{ secrets.CLIENT_ID }}" ]] || [[ -z "${{ secrets.CLIENT_SECRET }}" ]] || [[ -z "${{ secrets.SCRIPT_ID }}" ]]; then
          echo "❌ Missing required secrets. Please check README-OAUTH-SETUP.md for setup instructions."
          echo "Required secrets: ACCESS_TOKEN, REFRESH_TOKEN, CLIENT_ID, CLIENT_SECRET, SCRIPT_ID"
          exit 1
        else
          echo "✅ All required secrets are configured"
        fi

    - name: Create .clasprc.json for authentication
      run: |
        echo "🔑 Creating authentication file with proper JSON escaping..."
        jq -n \
          --arg client_id "${{ secrets.CLIENT_ID }}" \
          --arg client_secret "${{ secrets.CLIENT_SECRET }}" \
          --arg refresh_token "${{ secrets.REFRESH_TOKEN }}" \
          --arg access_token "${{ secrets.ACCESS_TOKEN }}" \
          '{
            "tokens": {
              "default": {
                "client_id": $client_id,
                "client_secret": $client_secret,
                "type": "authorized_user",
                "refresh_token": $refresh_token,
                "access_token": $access_token
              }
            }
          }' > ~/.clasprc.json
        echo "✅ Authentication file created with proper JSON formatting"

    - name: Verify authentication file
      run: |
        echo "📋 Checking authentication setup..."
        ls -la ~/.clasprc.json
        echo "📄 File structure verification:"
        jq 'del(.tokens.default.client_secret, .tokens.default.access_token, .tokens.default.refresh_token)' ~/.clasprc.json

    - name: Create .clasp.json with Script ID
      run: |
        echo "📝 Creating project configuration..."
        jq -n --arg script_id "${{ secrets.SCRIPT_ID }}" '{"scriptId": $script_id, "rootDir": "./src", "fileExtension": "gs"}' > .clasp.json
        echo "✅ Project configuration created"
        cat .clasp.json

    - name: Test clasp login status
      run: |
        echo "🔍 Testing clasp authentication..."
        clasp login --status || echo "Login status check completed - proceeding with push"

    - name: Push to Google Apps Script
      run: |
        echo "🚀 Deploying to Apps Script..."
        clasp push --force
        echo "✅ Push completed successfully"

    - name: Create deployment (main branch only)
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        echo "📦 Creating deployment..."
        clasp deploy --description "Automated deployment from GitHub Actions - $(date '+%Y-%m-%d %H:%M:%S')"
        echo "✅ Deployment created successfully"

    - name: Deployment success notification
      if: success()
      run: |
        echo "🎉 Successfully deployed to Google Apps Script!"
        echo "📝 Changes in src/ folder have been pushed to Apps Script project"
        if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          echo "📦 A new deployment was also created"
        fi

    - name: Deployment failure notification
      if: failure()
      run: |
        echo "❌ Deployment failed!"
        echo "🔍 Check the logs above for details"
        echo "📖 Refer to TROUBLESHOOTING.md for common solutions"
        echo "🏠 Authentication file location: ~/.clasprc.json"
        echo "📁 Project file location: .clasp.json"
        echo "🔧 Try running 'clasp login' locally to regenerate tokens if needed"