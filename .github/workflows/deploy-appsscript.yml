name: Deploy to Google Apps Script

on:
  push:
    branches: [ main, master ]
    paths:
      - 'src/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install clasp
      run: npm install -g @google/clasp

    - name: Verify required secrets
      run: |
        echo "🔍 Verifying secrets are present..."
        if [[ -z "${{ secrets.ACCESS_TOKEN }}" ]]; then echo "❌ ACCESS_TOKEN missing"; exit 1; fi
        if [[ -z "${{ secrets.REFRESH_TOKEN }}" ]]; then echo "❌ REFRESH_TOKEN missing"; exit 1; fi
        if [[ -z "${{ secrets.CLIENT_ID }}" ]]; then echo "❌ CLIENT_ID missing"; exit 1; fi
        if [[ -z "${{ secrets.CLIENT_SECRET }}" ]]; then echo "❌ CLIENT_SECRET missing"; exit 1; fi
        if [[ -z "${{ secrets.SCRIPT_ID }}" ]]; then echo "❌ SCRIPT_ID missing"; exit 1; fi
        echo "✅ All required secrets are configured"

    - name: Create .clasprc.json for authentication
      run: |
        echo "🔑 Creating authentication file with proper JSON escaping..."
        jq -n \
          --arg client_id "${{ secrets.CLIENT_ID }}" \
          --arg client_secret "${{ secrets.CLIENT_SECRET }}" \
          --arg refresh_token "${{ secrets.REFRESH_TOKEN }}" \
          --arg access_token "${{ secrets.ACCESS_TOKEN }}" \
          '{
            "tokens": {
              "default": {
                "client_id": $client_id,
                "client_secret": $client_secret,
                "type": "authorized_user",
                "refresh_token": $refresh_token,
                "access_token": $access_token
              }
            }
          }' > ~/.clasprc.json
        echo "✅ Authentication file created"

    - name: Verify authentication file
      run: |
        echo "📋 Checking authentication file..."
        if [[ ! -f ~/.clasprc.json ]]; then
          echo "❌ Authentication file not created!"
          exit 1
        fi
        echo "✅ Authentication file exists"
        echo "📄 File structure:"
        jq 'del(.tokens.default.client_secret, .tokens.default.access_token, .tokens.default.refresh_token)' ~/.clasprc.json

    - name: Create .clasp.json with Script ID
      run: |
        echo "📝 Creating project configuration..."
        jq -n --arg script_id "${{ secrets.SCRIPT_ID }}" '{"scriptId": $script_id, "rootDir": "./src", "fileExtension": "gs"}' > .clasp.json
        echo "✅ Project configuration created"
        echo "📄 Project config:"
        cat .clasp.json

    - name: Debug environment
      run: |
        echo "🔍 Debug information:"
        echo "Working directory: $(pwd)"
        echo "Files in current directory:"
        ls -la
        echo "Files in src directory:"
        ls -la src/ | head -10
        echo "Clasp version:"
        clasp --version

    - name: Test clasp authentication
      run: |
        echo "🔍 Testing clasp authentication..."
        clasp login --status || echo "⚠️ Login status check failed - but continuing"

    - name: Push to Google Apps Script with detailed error handling
      run: |
        echo "🚀 Deploying to Apps Script..."
        echo "Using Script ID: ${{ secrets.SCRIPT_ID }}"
        echo "Root directory: ./src"
        echo "Files to deploy:"
        find ./src -name "*.js" -o -name "*.gs" | head -10

        echo "🔄 Running clasp push --force..."
        if clasp push --force; then
          echo "✅ Push completed successfully!"
        else
          echo "❌ Push failed! Debugging..."
          echo "Clasp version: $(clasp --version)"
          echo "Authentication file exists: $(test -f ~/.clasprc.json && echo 'YES' || echo 'NO')"
          echo "Project file exists: $(test -f .clasp.json && echo 'YES' || echo 'NO')"
          echo "Project file contents:"
          cat .clasp.json
          echo "Trying with verbose output..."
          clasp push --force --verbose || true
          exit 1
        fi

    - name: Create deployment (main branch only)
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        echo "📦 Creating deployment..."
        clasp deploy --description "Automated deployment from GitHub Actions - $(date '+%Y-%m-%d %H:%M:%S')" || echo "⚠️ Deployment creation failed, but push succeeded"

    - name: Deployment success notification
      if: success()
      run: |
        echo "🎉 Successfully deployed to Google Apps Script!"
        echo "📝 Changes in src/ folder have been pushed to Apps Script project"
        if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          echo "📦 Deployment was also attempted"
        fi

    - name: Deployment failure notification
      if: failure()
      run: |
        echo "❌ Deployment failed!"
        echo "🔍 Check the logs above for details"
        echo "📖 Common issues:"
        echo "   - Apps Script API not enabled"
        echo "   - Invalid Script ID"
        echo "   - Expired or invalid OAuth tokens"
        echo "   - Script permissions issues"